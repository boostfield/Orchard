@functions {
    // To support the layout classifaction below. Implementing as a razor function because we can, could otherwise be a Func<string[], string, string> in the code block following.
    string CalcuClassify(string[] zoneNames, string classNamePrefix) {
        var zoneCounter = 0;
        var zoneNumsFilled = string.Join("", zoneNames.Select(zoneName => { ++zoneCounter; return Model[zoneName] != null ? zoneCounter.ToString() : "";}).ToArray());
        return HasText(zoneNumsFilled) ? classNamePrefix + zoneNumsFilled : "";
    }
}
@{
    /* Global includes for the theme
    ***************************************************************/



    SetMeta("description", "Website for School of Law, Xiamen University");
    SetMeta("keywords", "厦门大学,法学院,english,xmu,英文,官方网站");
    /* Some useful shortcuts or settings
    ***************************************************************/

    Func<dynamic, dynamic> Zone = x => Display(x); // Zone as an alias for Display to help make it obvious when we're displaying zones

    /* Layout classification based on filled zones
    ***************************************************************/

    //Add classes to the wrapper div to toggle aside widget zones on and off
    var asideClass = CalcuClassify(new [] {"AsideFirst", "AsideSecond"}, "aside-"); // for aside-1, aside-2 or aside-12 if any of the aside zones are filled
    if (HasText(asideClass)) {
        Model.Classes.Add(asideClass);
    }

    //Add classes to the wrapper div to toggle tripel widget zones on and off
    var tripelClass = CalcuClassify(new [] {"TripelFirst", "TripelSecond", "TripelThird"}, "tripel-"); // for tripel-1, triple-2, etc. if any of the tripel zones are filled
    if (HasText(tripelClass)) {
        Model.Classes.Add(tripelClass);
    }

    //Add classes to the wrapper div to toggle quad widget zones on and off
    var footerQuadClass = CalcuClassify(new [] {"FooterQuadFirst", "FooterQuadSecond", "FooterQuadThird", "FooterQuadFourth"}, "split-"); // for quad-1, quad-2, etc. if any of the quad zones are filled
    if (HasText(footerQuadClass)) {
        Model.Classes.Add(footerQuadClass);
    }

    /* Inserting some ad hoc shapes
    ***************************************************************/

    WorkContext.Layout.Footer.Add(New.ENFooterFirst(), "0");
    //WorkContext.Layout.Footer.Add(New.ENFooterSecond(), "10");
    WorkContext.Layout.Footer.Add(New.ENBadgeOfHonor(), "15"); // Powered by Orchard
                                                               // Powered by Orchard
                                                               //WorkContext.Layout.Navigation.Add(New.User(), "10"); // Login and dashboard links

    /* Last bit of code to prep the layout wrapper
    ***************************************************************/

    Model.Id = "layout-wrapper";
    var tag = Tag(Model, "div"); // using Tag so the layout div gets the classes, id and other attributes added to the Model
}
@tag.StartElement
<script>
    function baiduSearch() {
        var wd = document.getElementById("input-keyword").value;
        var link = "http://www.baidu.com/s?si=law.xmu.edu.cn&cl=3&ct=2097152&tn=baidulocal&word=" + wd;
        window.open(link);
    }
</script>
<div class="en-home ">
    <div class="navbar-wrapper">
        <div class="navbar navbar-default center" role="navigation">
            <div class="navbar-inner">
                <div class="container-fluid">
                    <div class="navbar-header">
                        <a class="navbar-brand" href="~/en"><img src="@Url.Content(Html.ThemePath(WorkContext.CurrentTheme, "/Content/images/en/img_nav_logo.png"))" class="img-responsive"/></a>
                        <button class="navbar-toggle" type="button" data-toggle="collapse" data-target=".navbar-collapse">
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                            <span class="icon-bar"></span>
                        </button>
                        @if (Model.Header != null)
                        {
                            @Zone(Model.Header)
                        }
                        
                    </div>
                   
                    <p class="navbar-text hidden-xs"><a href="~/">中文</a></p>
                    <div class="navbar-collapse collapse pull-right">
                        <form class="navbar-form " role="search">
                            <div class="input-group">
                                <input type="text" class="form-control" placeholder="Search" id="input-keyword">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="button" onclick="javascript:baiduSearch()"></button>
                                </span>
                            </div>
                        </form>
                    </div>
                    <div class="navbar-collapse collapse pull-right">
                        @if (Model.Navigation != null)
                        {
                            @Zone(Model.Navigation)
                        }
                        
                    </div>
                    <div class="navbar-collapse collapse pull-right">
                        <ul class="nav navbar-nav">
                            <li class="visible-xs"><a href="~/">中文</a></li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <section id="content">
        <div class="container-fluid">
            @if (Model.BeforeMain != null)
            {
                <div class="row">
                    <div class="col-lg-12">
                        @Zone(Model.BeforeMain)
                    </div>
                </div>
            }

            @if (Model.Featured != null)
            {
                <div class="row">
                    <div class="col-lg-12">
                        @Zone(Model.Featured)
                    </div>
                </div>
            }

            <div class="row">
                @if (Model.AsideFirst != null)
                {
                    <aside class="col-lg-3">
                        <div class="well well-sm">
                            @Zone(Model.AsideFirst)
                        </div>
                    </aside>
                }
                <div class="container-fluid">
                    @if (Model.Messages != null)
                    {
                        @Zone(Model.Messages)

                    }

                    @if (Model.BeforeContent != null)
                    {
                        @Zone(Model.BeforeContent)
                    }
                    @if (Model.Content != null)
                    {
                        @Zone(Model.Content)
                    }
                    @if (Model.AfterContent != null)
                    {
                        @Zone(Model.AfterContent)
                    }
                </div>
                @if (Model.AsideSecond != null)
            {
                    <aside class="col-lg-3">
                        <div class="well well-sm">
                            @Zone(Model.AsideSecond)
                        </div>
                    </aside>
                }
            </div>
            @if (Model.AfterMain != null)
            {
                <div class="row">
                    <div class="col-lg-12">
                        @Zone(Model.AfterMain)
                    </div>
                </div>
            }

            @if (Model.TripelFirst != null || Model.TripelSecond != null || Model.TripelThird != null)
            {
                <div class="row">
                    @if (Model.TripelFirst != null)
                    {
                        <!-- start: Tripel -->
                        <div class="col-lg-4">
                            @Zone(Model.TripelFirst)
                        </div>
                        <!-- end: Tripel -->
                    }
                    @if (Model.TripelSecond != null)
                    {
                        <!-- start: Tripel -->
                        <div class="col-lg-4">
                            @Zone(Model.TripelSecond)
                        </div>
                        <!-- end: Tripel -->
                    }
                    @if (Model.TripelThird != null)
                    {
                        <!-- start: Tripel -->
                        <div class="col-lg-4">
                            @Zone(Model.TripelThird)
                        </div>
                        <!-- end: Tripel -->
                    }
                </div>
            }
        </div>
    </section>


    
</div>

    <footer id="en-footer" class="en-footer">
        <div class="container-fluid">
            @if (Model.Footer != null)
            {
                <div class="row">
                    @Zone(Model.Footer)
                </div>
            }
        </div>
    </footer>

@tag.EndElement